{"version":3,"sources":["../node_modules/@mui/material/FormLabel/formLabelClasses.js","../node_modules/@mui/material/FormLabel/FormLabel.js","../node_modules/@mui/material/InputLabel/inputLabelClasses.js","../node_modules/@mui/material/InputLabel/InputLabel.js","../node_modules/@mui/material/FormHelperText/formHelperTextClasses.js","../node_modules/@mui/material/FormHelperText/FormHelperText.js","../node_modules/@mui/material/FormControl/formControlClasses.js","../node_modules/@mui/material/FormControl/FormControl.js"],"names":["getFormLabelUtilityClasses","slot","generateUtilityClass","formLabelClasses","generateUtilityClasses","_excluded","FormLabelRoot","styled","name","overridesResolver","styles","ownerState","_extends","root","color","colorSecondary","filled","theme","vars","palette","text","secondary","typography","body1","lineHeight","padding","position","focused","main","disabled","error","AsteriskComponent","props","asterisk","FormLabel","React","inProps","ref","useThemeProps","children","className","component","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","required","classes","slots","capitalize","composeClasses","useUtilityClasses","_jsxs","as","clsx","getInputLabelUtilityClasses","InputLabelRoot","shouldForwardProp","prop","rootShouldForwardProp","formControl","size","sizeSmall","shrink","disableAnimation","animated","variant","display","transformOrigin","whiteSpace","overflow","textOverflow","maxWidth","left","top","transform","transition","transitions","create","duration","shorter","easing","easeOut","zIndex","pointerEvents","userSelect","InputLabel","shrinkProp","adornedStart","composedClasses","_jsx","getFormHelperTextUtilityClasses","_span","formHelperTextClasses","FormHelperTextRoot","contained","caption","textAlign","marginTop","marginRight","marginBottom","marginLeft","FormHelperText","getFormControlUtilityClasses","FormControlRoot","margin","fullWidth","flexDirection","minWidth","border","verticalAlign","width","FormControl","visuallyFocused","hiddenLabel","initialAdornedStart","forEach","child","isMuiElement","input","isAdornedStart","setAdornedStart","initialFilled","isFilled","inputProps","setFilled","focusedState","setFocused","registerEffect","undefined","childContext","onBlur","onEmpty","onFilled","onFocus","FormControlContext","Provider","value"],"mappings":"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","file":"static/js/2.ea086c40.chunk.js","sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormLabel', slot);\n}\nconst formLabelClasses = generateUtilityClasses('MuiFormLabel', ['root', 'colorSecondary', 'focused', 'disabled', 'error', 'filled', 'required', 'asterisk']);\nexport default formLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\nexport const FormLabelRoot = styled('label', {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return _extends({}, styles.root, ownerState.color === 'secondary' && styles.colorSecondary, ownerState.filled && styles.filled);\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, theme.typography.body1, {\n  lineHeight: '1.4375em',\n  padding: 0,\n  position: 'relative',\n  [`&.${formLabelClasses.focused}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${formLabelClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  },\n  [`&.${formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n  const {\n      children,\n      className,\n      component = 'label'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  const ownerState = _extends({}, props, {\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      ownerState: ownerState,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiInputLabel', slot);\n}\nconst inputLabelClasses = generateUtilityClasses('MuiInputLabel', ['root', 'focused', 'disabled', 'error', 'required', 'asterisk', 'formControl', 'sizeSmall', 'shrink', 'animated', 'standard', 'filled', 'outlined']);\nexport default inputLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableAnimation\", \"margin\", \"shrink\", \"variant\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport FormLabel, { formLabelClasses } from '../FormLabel';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { getInputLabelUtilityClasses } from './inputLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    formControl,\n    size,\n    shrink,\n    disableAnimation,\n    variant,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', formControl && 'formControl', !disableAnimation && 'animated', shrink && 'shrink', size === 'small' && 'sizeSmall', variant],\n    asterisk: [required && 'asterisk']\n  };\n  const composedClasses = composeClasses(slots, getInputLabelUtilityClasses, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst InputLabelRoot = styled(FormLabel, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiInputLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formLabelClasses.asterisk}`]: styles.asterisk\n    }, styles.root, ownerState.formControl && styles.formControl, ownerState.size === 'small' && styles.sizeSmall, ownerState.shrink && styles.shrink, !ownerState.disableAnimation && styles.animated, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'block',\n  transformOrigin: 'top left',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  maxWidth: '100%'\n}, ownerState.formControl && {\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  // slight alteration to spec spacing to match visual spec result\n  transform: 'translate(0, 20px) scale(1)'\n}, ownerState.size === 'small' && {\n  // Compensation for the `Input.inputSizeSmall` style.\n  transform: 'translate(0, 17px) scale(1)'\n}, ownerState.shrink && {\n  transform: 'translate(0, -1.5px) scale(0.75)',\n  transformOrigin: 'top left',\n  maxWidth: '133%'\n}, !ownerState.disableAnimation && {\n  transition: theme.transitions.create(['color', 'transform', 'max-width'], {\n    duration: theme.transitions.duration.shorter,\n    easing: theme.transitions.easing.easeOut\n  })\n}, ownerState.variant === 'filled' && _extends({\n  // Chrome's autofill feature gives the input field a yellow background.\n  // Since the input field is behind the label in the HTML tree,\n  // the input field is drawn last and hides the label with an opaque background color.\n  // zIndex: 1 will raise the label above opaque background-colors of input.\n  zIndex: 1,\n  pointerEvents: 'none',\n  transform: 'translate(12px, 16px) scale(1)',\n  maxWidth: 'calc(100% - 24px)'\n}, ownerState.size === 'small' && {\n  transform: 'translate(12px, 13px) scale(1)'\n}, ownerState.shrink && _extends({\n  userSelect: 'none',\n  pointerEvents: 'auto',\n  transform: 'translate(12px, 7px) scale(0.75)',\n  maxWidth: 'calc(133% - 24px)'\n}, ownerState.size === 'small' && {\n  transform: 'translate(12px, 4px) scale(0.75)'\n})), ownerState.variant === 'outlined' && _extends({\n  // see comment above on filled.zIndex\n  zIndex: 1,\n  pointerEvents: 'none',\n  transform: 'translate(14px, 16px) scale(1)',\n  maxWidth: 'calc(100% - 24px)'\n}, ownerState.size === 'small' && {\n  transform: 'translate(14px, 9px) scale(1)'\n}, ownerState.shrink && {\n  userSelect: 'none',\n  pointerEvents: 'auto',\n  // Theoretically, we should have (8+5)*2/0.75 = 34px\n  // but it feels a better when it bleeds a bit on the left, so 32px.\n  maxWidth: 'calc(133% - 32px)',\n  transform: 'translate(14px, -9px) scale(0.75)'\n})));\nconst InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiInputLabel',\n    props: inProps\n  });\n  const {\n      disableAnimation = false,\n      shrink: shrinkProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  let shrink = shrinkProp;\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['size', 'variant', 'required']\n  });\n  const ownerState = _extends({}, props, {\n    disableAnimation,\n    formControl: muiFormControl,\n    shrink,\n    size: fcs.size,\n    variant: fcs.variant,\n    required: fcs.required\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(InputLabelRoot, _extends({\n    \"data-shrink\": shrink,\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the transition animation is disabled.\n   * @default false\n   */\n  disableAnimation: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the `input` of this label is focused.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n  /**\n   * if `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'normal'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['normal', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormHelperTextUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormHelperText', slot);\n}\nconst formHelperTextClasses = generateUtilityClasses('MuiFormHelperText', ['root', 'error', 'disabled', 'sizeSmall', 'sizeMedium', 'contained', 'focused', 'filled', 'required']);\nexport default formHelperTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport formHelperTextClasses, { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\nconst FormHelperTextRoot = styled('p', {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size && styles[`size${capitalize(ownerState.size)}`], ownerState.contained && styles.contained, ownerState.filled && styles.filled];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, theme.typography.caption, {\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  [`&.${formHelperTextClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  },\n  [`&.${formHelperTextClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}, ownerState.size === 'small' && {\n  marginTop: 4\n}, ownerState.contained && {\n  marginLeft: 14,\n  marginRight: 14\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n  const {\n      children,\n      className,\n      component = 'p'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  const ownerState = _extends({}, props, {\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children === ' ' ? // notranslate needed while Google Translate will not fix zero-width space issue\n    _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n      className: \"notranslate\",\n      children: \"\\u200B\"\n    })) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default FormHelperText;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControl', slot);\n}\nconst formControlClasses = generateUtilityClasses('MuiFormControl', ['root', 'marginNone', 'marginNormal', 'marginDense', 'fullWidth', 'disabled']);\nexport default formControlClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"focused\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nimport { getFormControlUtilityClasses } from './formControlClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', margin !== 'none' && `margin${capitalize(margin)}`, fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\nconst FormControlRoot = styled('div', {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return _extends({}, styles.root, styles[`margin${capitalize(ownerState.margin)}`], ownerState.fullWidth && styles.fullWidth);\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  flexDirection: 'column',\n  position: 'relative',\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: 'top'\n}, ownerState.margin === 'normal' && {\n  marginTop: 16,\n  marginBottom: 8\n}, ownerState.margin === 'dense' && {\n  marginTop: 8,\n  marginBottom: 4\n}, ownerState.fullWidth && {\n  width: '100%'\n}));\n\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it creates visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n  const {\n      children,\n      className,\n      color = 'primary',\n      component = 'div',\n      disabled = false,\n      error = false,\n      focused: visuallyFocused,\n      fullWidth = false,\n      hiddenLabel = false,\n      margin = 'none',\n      required = false,\n      size = 'medium',\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n        if (isFilled(child.props, true) || isFilled(child.props.inputProps, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const registeredInput = React.useRef(false);\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['MUI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n  const childContext = React.useMemo(() => {\n    return {\n      adornedStart,\n      setAdornedStart,\n      color,\n      disabled,\n      error,\n      filled,\n      focused,\n      fullWidth,\n      hiddenLabel,\n      size,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onEmpty: () => {\n        setFilled(false);\n      },\n      onFilled: () => {\n        setFilled(true);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      registerEffect,\n      required,\n      variant\n    };\n  }, [adornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required, size, variant]);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;"],"sourceRoot":""}